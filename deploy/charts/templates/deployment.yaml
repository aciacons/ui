---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ui-helm.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "ui-helm.name" . }}
    helm.sh/chart: {{ include "ui-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ui-helm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy: 
    type: {{ .Values.strategy.type }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ui-helm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: uiregcred
      restartPolicy: Always
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" # In Jenkins, need to call helm with --set image.tag=master-XY
        command: ["/usr/bin/npm"]
        args: ["start", "--", "--port=8888", "--config={{ .Values.deployenv.environment }}", "--prefix", "/ui/ui-build"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
         - name: http
           containerPort: 8888
           protocol: TCP
        livenessProbe:
          httpGet: 
            path: "/ui-routes"
            port: http
        readinessProbe:
          httpGet:
            path: "/ui-routes"
            port: http
#       env:
#         - name: foo
#           valueFrom:
#             secretKeyRef:
#               name: blah
#               key: blahrk


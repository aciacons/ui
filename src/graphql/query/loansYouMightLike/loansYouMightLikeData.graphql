#import '../../fragments/loanCardFields.graphql'

query (
	$country: [String],
	$activity: [Int],
	$sector: [Int],
	$imgDefaultSize: String = "w480h360",
	$imgRetinaSize: String = "w480h360",
) {
	lend {
		sameCountry: loans(filters: {country: $country, status: fundraising}, limit: 5, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}

		sameSector: loans(filters: {sector: $sector, status: fundraising}, limit: 5, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}

		samePartner: loans(filters: {partner: $partner, status: fundraising}, limit: 5, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}

		sameGender: loans(filters: {gender: $gender, status: fundraising}, limit: 5, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}

		# TODO: Might be able to delete this, will need to verify
		sameActivity: loans (filters: {activity: $activity, status: fundraising}, limit: 5, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}

		randomLoan: loans (filters: {status: fundraising}, limit: 6, sortBy: random) {
			values {
				...loanCardFields
				image {
					id
					default: url(customSize: $imgDefaultSize)
					retina: url(customSize: $imgRetinaSize)
					hash
				}
			}
		}
	}
}
